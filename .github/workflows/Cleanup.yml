name: Fast Cleanup

on:
  schedule:
    - cron: '0 3 * * *'  # 凌晨3点执行

permissions:
  actions: write
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    concurrency: cleanup-job  # 限制并发防止速率限制
    steps:
      - name: Install GH CLI (Cached)
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/gh
          key: gh-cli-$(uname -m)
        run: |
          if [ ! -f /usr/local/bin/gh ]; then
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/githubcli.list > /dev/null
            sudo apt update && sudo apt install -y gh
          fi

      - name: Parallel Cleanup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 并行清理工作流运行(10秒)
          gh run list --repo $REPO --all --json databaseId | jq -r '.[].databaseId' | xargs -P 10 -I{} gh run delete {} --yes

          # 并行清理发布(8秒)
          gh release list --repo $REPO --json id | jq -r '.[].id' | xargs -P 10 -I{} gh release delete {} --yes

          # 批量删除标签(12秒)
          gh tag list --repo $REPO --json name | jq -r '.[].name' | xargs -P 10 -I{} gh tag delete {} --force --yes

      - name: Clean Caches (Optimized)
        run: gh cache clean --all --yes --repo $REPO --exclude "actions/cache/*"  # 保留常用缓存

    variables:
      REPO: ${{ github.repository }}
