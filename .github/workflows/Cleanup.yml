name: Auto Cleanup Repository

on:
  schedule:
    - cron: '0 16,4 * * *'
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      packages: write
    steps:
      - name: Cleanup Workflow Runs
        run: |
          page=1
          success=0
          failures=0
          
          while :; do
            response=$(curl -s -H "Authorization: token ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=100&page=$page")
            
            run_ids=$(echo "$response" | jq -r '.workflow_runs[] | select(.status != "in_progress") | .id')
            if [ -z "$run_ids" ]; then break; fi
            
            for id in $run_ids; do
              curl -s -X DELETE \
                -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/$id"
              if [ $? -eq 0 ]; then
                success=$((success + 1))
                echo "Deleted run: $id"
              else
                failures=$((failures + 1))
                echo "Failed to delete run: $id"
              fi
            done
            
            page=$((page + 1))
          done
          
          echo "Total runs deleted: $success | Failures: $failures"

      - name: Delete Releases
        run: |
          page=1
          success=0
          failures=0
          
          while :; do
            response=$(curl -s -H "Authorization: token ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/releases?per_page=100&page=$page")
            
            release_ids=$(echo "$response" | jq -r '.[].id')
            if [ -z "$release_ids" ]; then break; fi
            
            for id in $release_ids; do
              curl -s -X DELETE \
                -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/releases/$id"
              if [ $? -eq 0 ]; then
                success=$((success + 1))
                echo "Deleted release: $id"
              else
                failures=$((failures + 1))
                echo "Failed to delete release: $id"
              fi
            done
            
            page=$((page + 1))
          done
          
          echo "Total releases deleted: $success | Failures: $failures"

      - name: Delete Tags
        run: |
          page=1
          success=0
          failures=0
          
          while :; do
            response=$(curl -s -H "Authorization: token ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/git/refs/tags?per_page=100&page=$page")
            
            tag_refs=$(echo "$response" | jq -r '.[].ref')
            if [ -z "$tag_refs" ]; then break; fi
            
            for ref in $tag_refs; do
              tag_name=${ref#refs/tags/}
              curl -s -X DELETE \
                -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$tag_name"
              if [ $? -eq 0 ]; then
                success=$((success + 1))
                echo "Deleted tag: $tag_name"
              else
                failures=$((failures + 1))
                echo "Failed to delete tag: $tag_name"
              fi
            done
            
            page=$((page + 1))
          done
          
          echo "Total tags deleted: $success | Failures: $failures"

      - name: Cleanup Caches
        run: |
          page=1
          success=0
          failures=0
          
          while :; do
            response=$(curl -s -H "Authorization: token ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/caches?per_page=100&page=$page")
            
            cache_ids=$(echo "$response" | jq -r '.actions_caches[].id')
            if [ -z "$cache_ids" ]; then break; fi
            
            for id in $cache_ids; do
              curl -s -X DELETE \
                -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/actions/caches/$id"
              if [ $? -eq 0 ]; then
                success=$((success + 1))
                echo "Deleted cache: $id"
              else
                failures=$((failures + 1))
                echo "Failed to delete cache: $id"
              fi
            done
            
            page=$((page + 1))
          done
          
          echo "Total caches deleted: $success | Failures: $failures"

      - name: Cleanup Artifacts
        run: |
          page=1
          success=0
          failures=0
          
          while :; do
            response=$(curl -s -H "Authorization: token ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?per_page=100&page=$page")
            
            artifact_ids=$(echo "$response" | jq -r '.artifacts[].id')
            if [ -z "$artifact_ids" ]; then break; fi
            
            for id in $artifact_ids; do
              curl -s -X DELETE \
                -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$id"
              if [ $? -eq 0 ]; then
                success=$((success + 1))
                echo "Deleted artifact: $id"
              else
                failures=$((failures + 1))
                echo "Failed to delete artifact: $id"
              fi
            done
            
            page=$((page + 1))
          done
          
          echo "Total artifacts deleted: $success | Failures: $failures"
