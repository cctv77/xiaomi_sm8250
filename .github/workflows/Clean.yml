name: Auto-Clean Repository

on:
  schedule:
    - cron: '0 16,4 * * *'
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write  # 删除运行和缓存必须的权限
      contents: write  # 修改仓库内容必须的权限
      
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Purge all workflow runs
        run: |
          current_run=${{ github.run_id }}
          gh run list --limit 500 --json databaseId -q '.[].databaseId' | \
          while read run_id; do
            if [ "$run_id" != "$current_run" ]; then
              gh api -X DELETE "/repos/${{ github.repository }}/actions/runs/$run_id" \
                -H "Authorization: Bearer $GH_TOKEN"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clear all caches
        run: |
          gh api /repos/${{ github.repository }}/actions/caches \
            --paginate -q '.cache_entries[].id' | \
          while read cache_id; do
            gh api -X DELETE "/repos/${{ github.repository }}/actions/caches/$cache_id" \
              -H "Authorization: Bearer $GH_TOKEN"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Remove all releases and tags
        run: |
          gh api "/repos/${{ github.repository }}/releases?per_page=100" \
            --paginate -q '.[].id' | \
          while read release_id; do
            gh api -X DELETE "/repos/${{ github.repository }}/releases/$release_id" \
              -H "Authorization: Bearer $GH_TOKEN"
          done
          
          git ls-remote --tags origin | awk '{print $2}' | sed 's|^refs/tags/||' | \
          while read tag; do
            git push origin ":refs/tags/$tag"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
